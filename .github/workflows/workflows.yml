name: Lint Code and Build Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    name: Python Lint Repository
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    name: Build Image
    needs: lint
    if: ${{ always() && contains(join(needs.lint.result, ','), 'success') }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      CR_USER: ${{ secrets.CR_USER }}
      CR_PAT: ${{ secrets.CR_PAT }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Lowercase Image Name
        run: |
           echo "IMAGE_NAME=$(echo ghcr.io/${GITHUB_REPOSITORY}:${GITHUB_SHA} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Update Image Artifact
        uses: actions/upload-artifact@v3
        with:
          name: image_artifact
          path: ${{ env.IMAGE_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.CR_USER }}
          password: ${{ env.CR_PAT }}

      - name: Build and Push Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
